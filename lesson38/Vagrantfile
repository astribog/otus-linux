# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :backup => {
        :box_name => "centos/7",
        :vm_name => "backup", 
        :ip_addr => '192.168.56.150',
	:disks => {
		:sata1 => {
			:dfile => '../sata1.vdi',
			:size => 2500,
			:port => 1
		}
	}
  },
  :client => {
        :box_name => "centos/7",
        :vm_name => "client",
        :ip_addr => '192.168.56.151',
	:disks => {
		}
	},
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]
      box.vm.network "private_network", ip: boxconfig[:ip_addr]
      box.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--memory", "2048"]
        needsController = false
        boxconfig[:disks].each do |dname, dconf|
          unless File.exist?(dconf[:dfile])
            vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
            needsController =  true
          end
		    end
        if needsController == true
          vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
          boxconfig[:disks].each do |dname, dconf|
            vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
          end
        end
      end
      if boxconfig[:vm_name] == "client"
        box.vm.provision "ansible" do |ansible|
          ansible.playbook = "playbook.yml"
          ansible.inventory_path = "staging/hosts"
          ansible.host_key_checking = "false"
          ansible.limit = "all"
        end
      end
    end
  end
end

